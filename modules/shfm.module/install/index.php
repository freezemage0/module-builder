<?php

use Bitrix\Main\ModuleManager;
use Bitrix\Main\Loader;
use Bitrix\Main\NotImplementedException;
use Bitrix\Main\Localization\Loc;
use Exception;

class shfm_module extends CModule
{
    public function __construct()
    {
        $this->MODULE_ID = shfm.module;
        $this->MODULE_NAME = Loc::getMessage('shfm.module.NAME');
        $this->MODULE_DESCRIPTION = Loc::getMessage('shfm.module.DESCRIPTION');

        include(__DIR__ . '/version.php');
        $this->MODULE_VERSION = $arModuleVersion['VERSION'];
        $this->MODULE_VERSION_DATE = $arModuleVersion['VERSION_DATE'];

        $this->PARTNER_NAME = Loc::getMessage('{{$MODULE_ID}}.PARTNER_NAME');
        $this->PARTNER_URI = Loc::getMessage('{{$MODULE_ID}}.PARTNER_URI');
    }

    public function DoInstall(): void
    {
        ModuleManager::registerModule($this->MODULE_ID);
        Loader::includeModule($this->MODULE_ID);

        try {
            $this->InstallDB();
            $this->InstallFiles();
        } catch (Exception $e) {
            $this->DoUninstall();
        }
    }

    public function DoUninstall(): void
    {
        $this->UnInstallFiles();
        $this->UnInstallDB();

        ModuleManager::unRegisterModule($this->MODULE_ID);
    }

    public function InstallDB(): void
    {
        throw new NotImplementedException(sprintf('%s MUST be implemented', __METHOD__)); // todo: change autogenerated stub.
    }

    public function UnInstallDB(): void
    {
        throw new NotImplementedException(sprintf('%s MUST be implemented', __METHOD__)); // todo: change autogenerated stub.
    }

    public function InstallFiles(): void
    {
        throw new NotImplementedException(sprintf('%s MUST be implemented', __METHOD__)); // todo: change autogenerated stub.
    }

    public function UnInstallFiles(): void
    {
        throw new NotImplementedException(sprintf('%s MUST be implemented', __METHOD__)); // todo: change autogenerated stub.
    }
}